// Code generated by protoc-gen-go. DO NOT EDIT.
// source: accounts.proto

/*
Package accounts is a generated protocol buffer package.

It is generated from these files:
	accounts.proto

It has these top-level messages:
	Account
	ListAccountsRequest
	ListAccountsResponse
	SearchRequest
	SearchResponse
	GetRequest
	AuthenticatePasswordRequest
	GeneratePasswordResetTokenRequest
	CreateAccountRequest
	UpdateAccountRequest
	AccountWithErrorsResponse
	DeleteAccountRequest
*/
package accounts

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	Id                 string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Email              string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Name               string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Username           string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	PhoneNo            string `protobuf:"bytes,5,opt,name=phone_no,json=phoneNo" json:"phone_no,omitempty"`
	ConfirmToken       string `protobuf:"bytes,6,opt,name=confirm_token,json=confirmToken" json:"confirm_token,omitempty"`
	PasswordResetToken string `protobuf:"bytes,7,opt,name=password_reset_token,json=passwordResetToken" json:"password_reset_token,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Account) GetPhoneNo() string {
	if m != nil {
		return m.PhoneNo
	}
	return ""
}

func (m *Account) GetConfirmToken() string {
	if m != nil {
		return m.ConfirmToken
	}
	return ""
}

func (m *Account) GetPasswordResetToken() string {
	if m != nil {
		return m.PasswordResetToken
	}
	return ""
}

type ListAccountsRequest struct {
	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListAccountsRequest) Reset()                    { *m = ListAccountsRequest{} }
func (m *ListAccountsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAccountsRequest) ProtoMessage()               {}
func (*ListAccountsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListAccountsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAccountsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListAccountsResponse struct {
	Accounts      []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	NextPageToken string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListAccountsResponse) Reset()                    { *m = ListAccountsResponse{} }
func (m *ListAccountsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListAccountsResponse) ProtoMessage()               {}
func (*ListAccountsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListAccountsResponse) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *ListAccountsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type SearchRequest struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type SearchResponse struct {
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SearchResponse) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type GetRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type AuthenticatePasswordRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *AuthenticatePasswordRequest) Reset()                    { *m = AuthenticatePasswordRequest{} }
func (m *AuthenticatePasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthenticatePasswordRequest) ProtoMessage()               {}
func (*AuthenticatePasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AuthenticatePasswordRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AuthenticatePasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AuthenticatePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type GeneratePasswordResetTokenRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *GeneratePasswordResetTokenRequest) Reset()         { *m = GeneratePasswordResetTokenRequest{} }
func (m *GeneratePasswordResetTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GeneratePasswordResetTokenRequest) ProtoMessage()    {}
func (*GeneratePasswordResetTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7}
}

func (m *GeneratePasswordResetTokenRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GeneratePasswordResetTokenRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CreateAccountRequest struct {
	Account  *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password string   `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *CreateAccountRequest) Reset()                    { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()               {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CreateAccountRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CreateAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UpdateAccountRequest struct {
	Account  *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password string   `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *UpdateAccountRequest) Reset()                    { *m = UpdateAccountRequest{} }
func (m *UpdateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAccountRequest) ProtoMessage()               {}
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdateAccountRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *UpdateAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AccountWithErrorsResponse struct {
	Account *Account          `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Errors  map[string]string `protobuf:"bytes,2,rep,name=errors" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *AccountWithErrorsResponse) Reset()                    { *m = AccountWithErrorsResponse{} }
func (m *AccountWithErrorsResponse) String() string            { return proto.CompactTextString(m) }
func (*AccountWithErrorsResponse) ProtoMessage()               {}
func (*AccountWithErrorsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AccountWithErrorsResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *AccountWithErrorsResponse) GetErrors() map[string]string {
	if m != nil {
		return m.Errors
	}
	return nil
}

type DeleteAccountRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteAccountRequest) Reset()                    { *m = DeleteAccountRequest{} }
func (m *DeleteAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccountRequest) ProtoMessage()               {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeleteAccountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "accounts.Account")
	proto.RegisterType((*ListAccountsRequest)(nil), "accounts.ListAccountsRequest")
	proto.RegisterType((*ListAccountsResponse)(nil), "accounts.ListAccountsResponse")
	proto.RegisterType((*SearchRequest)(nil), "accounts.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "accounts.SearchResponse")
	proto.RegisterType((*GetRequest)(nil), "accounts.GetRequest")
	proto.RegisterType((*AuthenticatePasswordRequest)(nil), "accounts.AuthenticatePasswordRequest")
	proto.RegisterType((*GeneratePasswordResetTokenRequest)(nil), "accounts.GeneratePasswordResetTokenRequest")
	proto.RegisterType((*CreateAccountRequest)(nil), "accounts.CreateAccountRequest")
	proto.RegisterType((*UpdateAccountRequest)(nil), "accounts.UpdateAccountRequest")
	proto.RegisterType((*AccountWithErrorsResponse)(nil), "accounts.AccountWithErrorsResponse")
	proto.RegisterType((*DeleteAccountRequest)(nil), "accounts.DeleteAccountRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Accounts service

type AccountsClient interface {
	List(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (*ListAccountsResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Account, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Create(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*AccountWithErrorsResponse, error)
	Update(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*AccountWithErrorsResponse, error)
	Delete(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*Account, error)
	AuthenticatePassword(ctx context.Context, in *AuthenticatePasswordRequest, opts ...grpc.CallOption) (*Account, error)
	GeneratePasswordResetToken(ctx context.Context, in *GeneratePasswordResetTokenRequest, opts ...grpc.CallOption) (*Account, error)
}

type accountsClient struct {
	cc *grpc.ClientConn
}

func NewAccountsClient(cc *grpc.ClientConn) AccountsClient {
	return &accountsClient{cc}
}

func (c *accountsClient) List(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (*ListAccountsResponse, error) {
	out := new(ListAccountsResponse)
	err := grpc.Invoke(ctx, "/accounts.Accounts/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/accounts.Accounts/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/accounts.Accounts/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) Create(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*AccountWithErrorsResponse, error) {
	out := new(AccountWithErrorsResponse)
	err := grpc.Invoke(ctx, "/accounts.Accounts/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) Update(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*AccountWithErrorsResponse, error) {
	out := new(AccountWithErrorsResponse)
	err := grpc.Invoke(ctx, "/accounts.Accounts/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) Delete(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/accounts.Accounts/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) AuthenticatePassword(ctx context.Context, in *AuthenticatePasswordRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/accounts.Accounts/AuthenticatePassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) GeneratePasswordResetToken(ctx context.Context, in *GeneratePasswordResetTokenRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/accounts.Accounts/GeneratePasswordResetToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Accounts service

type AccountsServer interface {
	List(context.Context, *ListAccountsRequest) (*ListAccountsResponse, error)
	Get(context.Context, *GetRequest) (*Account, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Create(context.Context, *CreateAccountRequest) (*AccountWithErrorsResponse, error)
	Update(context.Context, *UpdateAccountRequest) (*AccountWithErrorsResponse, error)
	Delete(context.Context, *DeleteAccountRequest) (*Account, error)
	AuthenticatePassword(context.Context, *AuthenticatePasswordRequest) (*Account, error)
	GeneratePasswordResetToken(context.Context, *GeneratePasswordResetTokenRequest) (*Account, error)
}

func RegisterAccountsServer(s *grpc.Server, srv AccountsServer) {
	s.RegisterService(&_Accounts_serviceDesc, srv)
}

func _Accounts_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.Accounts/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).List(ctx, req.(*ListAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.Accounts/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.Accounts/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.Accounts/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).Create(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.Accounts/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).Update(ctx, req.(*UpdateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.Accounts/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).Delete(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_AuthenticatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).AuthenticatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.Accounts/AuthenticatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).AuthenticatePassword(ctx, req.(*AuthenticatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_GeneratePasswordResetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneratePasswordResetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).GeneratePasswordResetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.Accounts/GeneratePasswordResetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).GeneratePasswordResetToken(ctx, req.(*GeneratePasswordResetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Accounts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "accounts.Accounts",
	HandlerType: (*AccountsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Accounts_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Accounts_Get_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Accounts_Search_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Accounts_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Accounts_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Accounts_Delete_Handler,
		},
		{
			MethodName: "AuthenticatePassword",
			Handler:    _Accounts_AuthenticatePassword_Handler,
		},
		{
			MethodName: "GeneratePasswordResetToken",
			Handler:    _Accounts_GeneratePasswordResetToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "accounts.proto",
}

func init() { proto.RegisterFile("accounts.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 633 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdf, 0x4f, 0xd4, 0x4e,
	0x10, 0xe7, 0x7e, 0x1f, 0xc3, 0x17, 0xbe, 0x3a, 0x36, 0xb1, 0x14, 0x31, 0x58, 0x02, 0x21, 0x21,
	0x1e, 0x04, 0x5f, 0xd4, 0x84, 0x18, 0x54, 0x72, 0x31, 0x31, 0x8a, 0x45, 0x63, 0xe2, 0x83, 0x4d,
	0xb9, 0x1b, 0xb9, 0x0d, 0x77, 0xdd, 0x63, 0xbb, 0x55, 0xe1, 0x6f, 0xf4, 0xc5, 0x47, 0xff, 0x1b,
	0xd3, 0xdd, 0x6e, 0xaf, 0x47, 0x4b, 0xe4, 0x4c, 0x7c, 0xeb, 0xcc, 0x7c, 0xf6, 0x33, 0xb3, 0xf3,
	0x99, 0xd9, 0xc2, 0x52, 0xd0, 0xeb, 0xf1, 0x38, 0x94, 0x51, 0x67, 0x2c, 0xb8, 0xe4, 0xd8, 0x36,
	0xb6, 0xfb, 0xb3, 0x02, 0xad, 0x03, 0x6d, 0xe0, 0x12, 0x54, 0x59, 0xdf, 0xae, 0xac, 0x55, 0xb6,
	0xe6, 0xbd, 0x2a, 0xeb, 0xa3, 0x05, 0x0d, 0x1a, 0x05, 0x6c, 0x68, 0x57, 0x95, 0x4b, 0x1b, 0x88,
	0x50, 0x0f, 0x83, 0x11, 0xd9, 0x35, 0xe5, 0x54, 0xdf, 0xe8, 0x40, 0x3b, 0x8e, 0x48, 0x28, 0x7f,
	0x5d, 0xf9, 0x33, 0x1b, 0x97, 0xa1, 0x3d, 0x1e, 0xf0, 0x90, 0xfc, 0x90, 0xdb, 0x0d, 0x15, 0x6b,
	0x29, 0xfb, 0x0d, 0xc7, 0x75, 0x58, 0xec, 0xf1, 0xf0, 0x0b, 0x13, 0x23, 0x5f, 0xf2, 0x33, 0x0a,
	0xed, 0xa6, 0x8a, 0xff, 0x97, 0x3a, 0xdf, 0x27, 0x3e, 0xdc, 0x05, 0x6b, 0x1c, 0x44, 0xd1, 0x37,
	0x2e, 0xfa, 0xbe, 0xa0, 0x88, 0x64, 0x8a, 0x6d, 0x29, 0x2c, 0x9a, 0x98, 0x97, 0x84, 0xd4, 0x09,
	0xf7, 0x1d, 0xdc, 0x79, 0xcd, 0x22, 0x99, 0x5e, 0x2b, 0xf2, 0xe8, 0x3c, 0xa6, 0x48, 0xe2, 0x0a,
	0xcc, 0x8f, 0x83, 0x53, 0xf2, 0x23, 0x76, 0x49, 0xea, 0x96, 0x0d, 0xaf, 0x9d, 0x38, 0x8e, 0xd9,
	0x25, 0xe1, 0x2a, 0x80, 0x0a, 0x6a, 0x6e, 0x7d, 0x61, 0x05, 0xd7, 0x94, 0x23, 0xb0, 0xa6, 0x29,
	0xa3, 0x31, 0x0f, 0x23, 0xc2, 0x87, 0x90, 0xb5, 0xd2, 0xae, 0xac, 0xd5, 0xb6, 0x16, 0xf6, 0x6e,
	0x77, 0xb2, 0x5e, 0xa7, 0x68, 0x2f, 0x83, 0xe0, 0x26, 0xfc, 0x1f, 0xd2, 0x77, 0xe9, 0x17, 0x52,
	0x2d, 0x26, 0xee, 0xa3, 0x2c, 0xdd, 0x06, 0x2c, 0x1e, 0x53, 0x20, 0x7a, 0x03, 0x53, 0xbb, 0x05,
	0x8d, 0xf3, 0x98, 0xc4, 0x45, 0xaa, 0x8e, 0x36, 0xdc, 0x67, 0xb0, 0x64, 0x60, 0x7f, 0x55, 0x8f,
	0xbb, 0x07, 0xd0, 0x25, 0x69, 0x92, 0xdc, 0x48, 0x7f, 0xd7, 0x87, 0x95, 0x83, 0x58, 0x0e, 0x28,
	0x94, 0xac, 0x17, 0x48, 0x3a, 0xca, 0xfa, 0x3f, 0x03, 0x49, 0x32, 0x30, 0x46, 0xb8, 0x74, 0x90,
	0x32, 0xdb, 0x7d, 0x05, 0x0f, 0xba, 0x14, 0x92, 0x98, 0x22, 0x37, 0xe2, 0xce, 0x5a, 0xab, 0xf5,
	0x42, 0x50, 0x20, 0xc9, 0x5c, 0x3d, 0x3d, 0xbd, 0x0d, 0xad, 0xb4, 0x07, 0x8a, 0xa2, 0xb4, 0x4b,
	0x06, 0x31, 0x55, 0x6b, 0xf5, 0x4a, 0xad, 0x3e, 0x58, 0x1f, 0xc6, 0xfd, 0x7f, 0x98, 0xe0, 0x47,
	0x05, 0x96, 0xd3, 0x03, 0x1f, 0x99, 0x1c, 0x1c, 0x0a, 0xc1, 0xc5, 0x64, 0xfc, 0x66, 0x4a, 0xd3,
	0x85, 0x26, 0xa9, 0xe3, 0x76, 0x55, 0x4d, 0xc6, 0x4e, 0x01, 0x5b, 0xcc, 0xd0, 0xd1, 0xe6, 0x61,
	0x28, 0xc5, 0x85, 0x97, 0x1e, 0x77, 0x9e, 0xc0, 0x42, 0xce, 0x8d, 0xb7, 0xa0, 0x76, 0x46, 0x66,
	0x32, 0x93, 0xcf, 0x44, 0x8c, 0xaf, 0xc1, 0x30, 0x26, 0x23, 0x86, 0x32, 0x9e, 0x56, 0x1f, 0x57,
	0xdc, 0x4d, 0xb0, 0x5e, 0xd2, 0x90, 0x0a, 0xfd, 0xba, 0x22, 0xe7, 0xde, 0xaf, 0x3a, 0xb4, 0xcd,
	0xb2, 0x61, 0x17, 0xea, 0xc9, 0xf2, 0xe1, 0xea, 0xa4, 0xe0, 0x92, 0xfd, 0x76, 0xee, 0x5f, 0x17,
	0xd6, 0x57, 0x71, 0xe7, 0x70, 0x17, 0x6a, 0x5d, 0x92, 0x68, 0x4d, 0x80, 0x93, 0xe9, 0x77, 0x8a,
	0xad, 0x73, 0xe7, 0x70, 0x1f, 0x9a, 0x7a, 0xc3, 0xf0, 0xee, 0x24, 0x3c, 0xb5, 0x9a, 0x8e, 0x5d,
	0x0c, 0x64, 0x09, 0xdf, 0x42, 0x53, 0xcf, 0x1f, 0xe6, 0x8a, 0x2b, 0x9b, 0x48, 0x67, 0xfd, 0x06,
	0x62, 0x68, 0x42, 0x3d, 0x6f, 0x79, 0xc2, 0xb2, 0x09, 0xbc, 0x29, 0xe1, 0x3e, 0x34, 0xb5, 0x20,
	0x79, 0xc2, 0x32, 0x89, 0xca, 0xfb, 0xe3, 0x81, 0x55, 0xf6, 0x18, 0xe0, 0x46, 0x0e, 0x7c, 0xfd,
	0x63, 0x51, 0xce, 0xf9, 0x19, 0x9c, 0xeb, 0xf7, 0x1f, 0xb7, 0xf3, 0xe2, 0xfd, 0xe1, 0x95, 0x28,
	0xe5, 0x7f, 0x7e, 0xef, 0x93, 0x73, 0xca, 0xe4, 0x20, 0x3e, 0xe9, 0xf4, 0xf8, 0x68, 0x67, 0xc8,
	0x86, 0xc4, 0xf8, 0x8e, 0xc1, 0x9d, 0x34, 0xd5, 0x1f, 0xf2, 0xd1, 0xef, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xf3, 0x05, 0xf8, 0xa6, 0x33, 0x07, 0x00, 0x00,
}
